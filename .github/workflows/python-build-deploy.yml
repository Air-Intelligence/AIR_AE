name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/air-core-dev-ae-images:latest

  deploy:
    name: Deploy to GCE
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to GCE via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USER }}
          key: ${{ secrets.GCE_SSH_KEY }}
          script: |
            cd /home/ubuntu/rowing/fastapi
            docker compose down || true
            docker compose pull
            docker compose up -d
            docker compose ps

      - name: Send Success Discord Notification
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content": "**배포 성공!** :rocket: \n빌드 및 배포 과정이 성공적으로 완료되었습니다."}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
            
      - name: Send Failure Discord Notification
        if: failure()
        run: |
          outcome_message=""
          if [ "${{ steps.build.outcome }}" == "failure" ]; then
            outcome_message+="빌드 단계에서 오류 발생.\n"
          fi
          if [ "${{ steps.docker_build.outcome }}" == "failure" ]; then
            outcome_message+="Docker 빌드 단계에서 오류 발생.\n"
          fi
          if [ "${{ steps.deploy.outcome }}" == "failure" ]; then
            outcome_message+="배포 단계에서 오류 발생.\n"
          fi
          curl -H "Content-Type: application/json" \
            -d "{\"content\": \"**배포 실패!** :x: \n빌드 및 배포 과정에서 오류가 발생했습니다. \n오류 내용: ${outcome_message}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
